if(VSF_TARGET)
    file(GLOB __target_vendors RELATIVE ${VSF_CMAKE_ROOT}/targets ${VSF_CMAKE_ROOT}/targets/*)
    foreach(__target_vendor ${__target_vendors})
        if(IS_DIRECTORY ${VSF_CMAKE_ROOT}/targets/${__target_vendor})
            file(GLOB __target_chips_cmake RELATIVE ${VSF_CMAKE_ROOT}/targets/${__target_vendor} ${VSF_CMAKE_ROOT}/targets/${__target_vendor}/*)
            foreach(__target_chip_cmake ${__target_chips_cmake})
                get_filename_component(__target_chip ${__target_chip_cmake} NAME_WE)
                if(${VSF_TARGET} STREQUAL ${__target_chip})
                    message(STATUS "vendor: ${__target_vendor}")
                    message(STATUS "chip: ${__target_chip}")
                    include(${VSF_CMAKE_ROOT}/targets/${__target_vendor}/${__target_chip_cmake})
                endif()
            endforeach()
        endif()
    endforeach()
endif()

if(VSF_HAL_CHIP_VENDOR AND VSF_ARCH_SERIES)
    message(STATUS "VSF_HAL_CHIP_VENDOR: ${VSF_HAL_CHIP_VENDOR}")
    if(VSF_ARCH_NAME)
        message(STATUS "VSF_ARCH_NAME: ${VSF_ARCH_NAME}")
    endif()
    message(STATUS "VSF_ARCH_SERIES: ${VSF_ARCH_SERIES}")
    if(VSF_HAL_CHIP_NAME)
        message(STATUS "VSF_HAL_CHIP_NAME: ${VSF_HAL_CHIP_NAME}")
    endif()
    if(VSF_HOST_SYSTEM)
        message(STATUS "VSF_HOST_SYSTEM: ${VSF_HOST_SYSTEM}")
    endif()
else()
    message(FATAL_ERROR "${VSF_TARGET} not supported")
endif()
